basePath: /api/v1
definitions:
  entity.Post:
    properties:
      content:
        type: string
      title:
        type: string
    required:
    - content
    - title
    type: object
  entity.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: integer
    type: object
  entity.SigninRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  entity.SigninResponse:
    properties:
      accessToken:
        type: string
    type: object
  entity.SignupResponse:
    properties:
      acessToken:
        type: string
    type: object
  entity.User:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /auth/signin:
    post:
      consumes:
      - application/json
      description: authenticates a user
      parameters:
      - description: User
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.SigninRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.SigninResponse'
      summary: Authenticate user
      tags:
      - Auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.SignupResponse'
      summary: Create account
      tags:
      - Auth
  /post/all:
    get:
      consumes:
      - application/json
      description: Get all posts of the logged-in user on the platform
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Response'
            type: array
      security:
      - BearerAuth: []
      summary: Get all posts of the logged-in user
      tags:
      - Post
  /post/create:
    post:
      consumes:
      - application/json
      description: create a post on the platform
      parameters:
      - description: Post
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Response'
      summary: Create a post
      tags:
      - Post
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
